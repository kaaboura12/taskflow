{% extends 'base.html.twig' %}

{% block title %}My Profile - TaskFlow{% endblock %}

{% block content %}
<div class="container-fluid">
    <div class="section-heading mb-4">
        <h1 class="h3">Profile</h1>
    </div>
    
    <div class="row">
        <div class="col-lg-4 mb-4 mb-lg-0">
            <!-- Profile Card -->
            <div class="card">
                <div class="card-body text-center">
                    <div class="mb-4">
                        {% if user.profilePicture %}
                            <img src="{{ user.profilePicture }}" alt="{{ user.fullName }}" class="rounded-circle img-fluid" style="width: 120px; height: 120px; object-fit: cover;">
                        {% else %}
                            <div class="profile-avatar">
                                {{ user.firstName|first }}{{ user.lastName|first }}
                            </div>
                        {% endif %}
                    </div>
                    <h4 class="mb-1">{{ user.fullName }}</h4>
                    <p class="text-muted mb-4">{{ user.email }}</p>
                    
                    <div class="d-flex justify-content-center mb-4">
                        <div class="px-4 border-end">
                            <h5 class="mb-0">{{ user.tasks|length }}</h5>
                            <small class="text-muted">Tasks</small>
                        </div>
                        <div class="px-4">
                            <h5 class="mb-0">{{ user.createdAt|date('M Y') }}</h5>
                            <small class="text-muted">Joined</small>
                        </div>
                    </div>
                    
                    <button class="btn btn-primary w-100" data-bs-toggle="modal" data-bs-target="#editProfileModal">
                        <i class="fas fa-edit me-2"></i> Edit Profile
                    </button>
                </div>
            </div>
            
            <!-- Account Information Card -->
            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">Account Information</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label text-muted small">First Name</label>
                        <p class="mb-0 fw-medium">{{ user.firstName }}</p>
                    </div>
                    <div class="mb-3">
                        <label class="form-label text-muted small">Last Name</label>
                        <p class="mb-0 fw-medium">{{ user.lastName }}</p>
                    </div>
                    <div class="mb-3">
                        <label class="form-label text-muted small">Email</label>
                        <p class="mb-0 fw-medium">{{ user.email }}</p>
                    </div>
                    <div>
                        <label class="form-label text-muted small">Member Since</label>
                        <p class="mb-0 fw-medium">{{ user.createdAt|date('F d, Y') }}</p>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-8">
            <!-- My Tasks Card -->
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">My Tasks</h5>
                    <a href="{{ path('app_task_new') }}" class="btn btn-sm btn-primary">
                        <i class="fas fa-plus me-1"></i> New Task
                    </a>
                </div>
                <div class="card-body">
                    {% if user.tasks|length > 0 %}
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Title</th>
                                        <th>Status</th>
                                        <th>Priority</th>
                                        <th>Due Date</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for task in user.tasks %}
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="form-check me-2">
                                                        <input class="form-check-input task-complete-checkbox" type="checkbox" 
                                                            data-task-id="{{ task.id }}" 
                                                            {% if task.completed %}checked{% endif %}>
                                                    </div>
                                                    <span class="{% if task.completed %}text-decoration-line-through text-muted{% endif %}">
                                                        {{ task.title }}
                                                    </span>
                                                </div>
                                            </td>
                                            <td>
                                                {% if task.status == 'todo' %}
                                                    <span class="badge bg-primary">To Do</span>
                                                {% elseif task.status == 'in_progress' %}
                                                    <span class="badge bg-warning">In Progress</span>
                                                {% elseif task.status == 'review' %}
                                                    <span class="badge bg-info">Review</span>
                                                {% elseif task.status == 'done' %}
                                                    <span class="badge bg-success">Done</span>
                                                {% endif %}
                                            </td>
                                            <td>
                                                {% if task.priority >= 7 %}
                                                    <span class="badge bg-danger">High</span>
                                                {% elseif task.priority >= 4 %}
                                                    <span class="badge bg-warning">Medium</span>
                                                {% else %}
                                                    <span class="badge bg-info">Low</span>
                                                {% endif %}
                                            </td>
                                            <td>
                                                {% if task.dueDate %}
                                                    {{ task.dueDate|date('M d, Y') }}
                                                {% else %}
                                                    <span class="text-muted">No due date</span>
                                                {% endif %}
                                            </td>
                                            <td>
                                                <div class="btn-group">
                                                    <a href="{{ path('app_task_show', {'id': task.id}) }}" class="btn btn-sm btn-outline-primary" data-bs-toggle="tooltip" title="View Task">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a href="{{ path('app_task_edit', {'id': task.id}) }}" class="btn btn-sm btn-outline-primary" data-bs-toggle="tooltip" title="Edit Task">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    {% else %}
                        <div class="empty-state">
                            <i class="fas fa-tasks"></i>
                            <h5>No tasks assigned to you</h5>
                            <p>Create a new task or ask your team to assign you tasks.</p>
                            <a href="{{ path('app_task_new') }}" class="btn btn-primary">
                                <i class="fas fa-plus me-2"></i> Create Task
                            </a>
                        </div>
                    {% endif %}
                </div>
            </div>
            
            <!-- Security Settings Card -->
            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">Security Settings</h5>
                </div>
                <div class="card-body p-0">
                    <div class="settings-card">
                        <div class="settings-card-info">
                            <h5>Change Password</h5>
                            <p>Update your password to enhance security</p>
                        </div>
                        <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#changePasswordModal">
                            <i class="fas fa-key me-2"></i> Change
                        </button>
                    </div>
                    <div class="settings-card">
                        <div class="settings-card-info">
                            <h5>Two-Factor Authentication</h5>
                            <p>Add an extra layer of security to your account</p>
                        </div>
                        <button class="btn btn-outline-primary" disabled>
                            <i class="fas fa-shield-alt me-2"></i> Enable
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Profile Modal -->
<div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProfileModalLabel">Edit Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="profileUpdateForm" action="{{ path('app_profile_update') }}" method="post" enctype="multipart/form-data">
                    <input type="hidden" name="_token" value="{{ csrf_token('profile_update') }}">
                    <div class="mb-3">
                        <label for="firstName" class="form-label">First Name</label>
                        <input type="text" class="form-control" id="firstName" name="firstName" value="{{ user.firstName }}" required>
                    </div>
                    <div class="mb-3">
                        <label for="lastName" class="form-label">Last Name</label>
                        <input type="text" class="form-control" id="lastName" name="lastName" value="{{ user.lastName }}" required>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" name="email" value="{{ user.email }}" required>
                    </div>
                    <div class="mb-3">
                        <label for="profilePicture" class="form-label">Profile Picture</label>
                        <input type="file" class="form-control" id="profilePicture" name="profilePicture">
                        <div class="form-text">Upload a new profile picture (JPG, PNG, max 2MB)</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" form="profileUpdateForm" class="btn btn-primary">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Change Password Modal -->
<div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="changePasswordModalLabel">Change Password</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="changePasswordForm" action="{{ path('app_change_password') }}" method="post">
                    <input type="hidden" name="_token" value="{{ csrf_token('change_password') }}">
                    <div class="mb-3">
                        <label for="currentPassword" class="form-label">Current Password</label>
                        <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
                    </div>
                    <div class="mb-3">
                        <label for="newPassword" class="form-label">New Password</label>
                        <input type="password" class="form-control" id="newPassword" name="newPassword" required minlength="8">
                        <div class="form-text">Password must be at least 8 characters long.</div>
                    </div>
                    <div class="mb-3">
                        <label for="confirmPassword" class="form-label">Confirm New Password</label>
                        <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required minlength="8">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" form="changePasswordForm" class="btn btn-primary">Update Password</button>
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
{{ parent() }}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Handle task completion checkboxes
        const checkboxes = document.querySelectorAll('.task-complete-checkbox');
        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                const taskId = this.getAttribute('data-task-id');
                const taskRow = this.closest('tr');
                
                taskRow.classList.add('opacity-50');
                
                fetch(`/task/${taskId}/toggle-complete`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const taskTitle = this.closest('td').querySelector('span');
                        taskRow.classList.remove('opacity-50');
                        
                        if (data.completed) {
                            taskTitle.classList.add('text-decoration-line-through', 'text-muted');
                            // Create a success feedback flash
                            showToast('Task marked as complete', 'success');
                        } else {
                            taskTitle.classList.remove('text-decoration-line-through', 'text-muted');
                            showToast('Task marked as incomplete', 'info');
                        }
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    taskRow.classList.remove('opacity-50');
                    showToast('Could not update task status', 'danger');
                });
            });
        });
        
        // Form validation for password change
        const passwordForm = document.getElementById('changePasswordForm');
        if (passwordForm) {
            passwordForm.addEventListener('submit', function(e) {
                const newPass = document.getElementById('newPassword').value;
                const confirmPass = document.getElementById('confirmPassword').value;
                
                if (newPass !== confirmPass) {
                    e.preventDefault();
                    showToast('New passwords do not match', 'danger');
                }
            });
        }
        
        // Function to show toast notifications
        function showToast(message, type = 'info') {
            const toastContainer = document.createElement('div');
            toastContainer.className = 'position-fixed bottom-0 end-0 p-3';
            toastContainer.style.zIndex = '1050';
            
            const toastHtml = `
                <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `;
            
            toastContainer.innerHTML = toastHtml;
            document.body.appendChild(toastContainer);
            
            const toastElement = toastContainer.querySelector('.toast');
            const toast = new bootstrap.Toast(toastElement, {
                animation: true,
                autohide: true,
                delay: 3000
            });
            
            toast.show();
            
            // Remove toast container after it's hidden
            toastElement.addEventListener('hidden.bs.toast', function () {
                document.body.removeChild(toastContainer);
            });
        }
        
        // Show success messages via toast if there are flash messages
        const flashMessages = document.querySelectorAll('.alert');
        if (flashMessages.length > 0) {
            flashMessages.forEach(message => {
                let type = 'info';
                if (message.classList.contains('alert-success')) type = 'success';
                if (message.classList.contains('alert-danger')) type = 'danger';
                if (message.classList.contains('alert-warning')) type = 'warning';
                
                showToast(message.textContent.trim(), type);
                
                // Hide the original alert
                message.style.display = 'none';
            });
        }
    });
</script>
{% endblock %}
{% endblock %} 